# SPDX-FileCopyrightText: Copyright 2020-2023, Contributors to pocketutils
# SPDX-PackageHomePage: https://github.com/dmyersturnbull/pocketutils
# SPDX-License-Identifier: Apache-2.0

name: Deploy packages

on:
  push:
    tags: ["v*"]

concurrency:
  group: ${{ github.workflow }}-${{ github.sha }}
  cancel-in-progress: false

permissions:
  contents: write
  # This is used to complete the identity challenge
  # with sigstore/fulcio when running outside of PRs.
  id-token: write
  packages: write

jobs:
  publish-github-release:
    name: Publish GitHub Release
    needs: [bump]
    runs-on: ${{ os }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
      - name: Get release notes
        id: release-notes
        run: echo "release_notes=$(cz changelog --dry-run ${{ github.ref_name }})" >> $GITHUB_OUTPUT
      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        #if: ${{ github.ref_type == 'tag' }}
        with:
          draft: false
          generate_release_notes: false
          body: ${{ steps.release-notes.outputs.release_notes }}
          fail_on_unmatched_files: true
          token: ${{ github.token }}
          files: dist/*

  publish-pypi:
    name: Publish to PyPi
    needs: [bump]
    runs-on: ${{ os }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
      - name: Install hatch
        run: pip install hatch~=1.7
      - name: Publish to PyPi
        run: hatch publish
        env:
          HATCH_INDEX_USER: __token__
          HATCH_INDEX_AUTH: ${{ secrets.PYPI_TOKEN }}
        if: ${{ env.pypi_token != '' }}

  publish-docker:
    name: Publish to Docker container registries
    needs: [bump]
    runs-on: ${{ os }}
    steps:
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.1.1
      - name: Download Docker image
        uses: actions/download-artifact@v3
        with:
          name: docker
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Extract Docker metadata
        id: docker-meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ GITHUB_REPOSITORY }}
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        env:
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
        with:
          username: ${{ env.dockerhub_username }}
          password: ${{ env.dockerhub_token }}
        if: ${{ env.dockerhub_username != '' }}
      - name: Log in to GHCR
        uses: docker/login-action@v2
        env:
          ghcr_username: ${{ github.actor }}
          ghcr_password: ${{ github.token }}
        with:
          registry: ghcr.io
      - name: Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.docker-meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
