[metadata]
description-file = "README.md"

[build-system]
# virtualenv 20.0.34 partly breaks pre-commit under conda
# https://github.com/ContinuumIO/anaconda-issues/issues/12094
# Poetry uses pip and setuptools (although they're not included as dependencies)
# We don't need to list wheel here, but setting a min vr can avoid generating inferior wheels
requires = ["poetry>=1.2,<2", "virtualenv>=20", "wheel>=0.36,<1.0"]
build-backend = "poetry.masonry.api"


#########################################################################################
# Poetry metadata
#########################################################################################

[tool.poetry]
name = "pocketutils"
version = "0.10.0-alpha0"
description = "Adorable little Python code for you to copy or import."
keywords = ["python", "snippets", "utils", "gists", "bioinformatics"]
authors = ["Douglas Myers-Turnbull"]
maintainers = ["Douglas Myers-Turnbull"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/dmyersturnbull/pocketutils"
repository = "https://github.com/dmyersturnbull/pocketutils"
documentation = "https://pocketutils.readthedocs.io"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Natural Language :: English",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
	"Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

[tool.poetry.urls]
CI = "https://github.com/dmyersturnbull/pocketutils/actions"
Issues = "https://github.com/dmyersturnbull/pocketutils/issues"
Download = "https://pypi.org/project/pocketutils/"
Changelog = "https://github.com/dmyersturnbull/pocketutils/blob/main/CHANGELOG.md"


###################
# Poetry
###################

[tool.poetry.dependencies]
python                   = "^3.11"
defusedxml               = ">=0.7"
orjson                   = ">=3.8"
pint                     = ">=0.20"
regex                    = ">=2021"
"ruamel.yaml"            = ">=0.17, <1"
tomlkit                  = ">=0.11"

rich                     = {version=">=13", optional=true}
brotli                   = {version=">=1", optional=true}
loguru                   = {version=">=0.6", optional=true}
lz4                      = {version=">=4", optional=true}
psutil                   = {version=">=5", optional=true}
snappy                   = {version=">=3", optional=true}
typer                    = {version=">=0.9", optional=true}
zstandard                = {version=">=0.20", optional=true}

[tool.poetry.group.test.dependencies]
numpy                         = ">=1.25"
bandit                        = ">=1.7"
Flake8-pyproject              = "^1.2"
flake8                        = "^6"
flake8-warnings               = ">=0.4"
flake8-noqa                   = ">=1.3"
wemake-python-styleguide      = ">=0.18"
coverage                      = {version = "^7", extras = ["toml"]}
nbqa                          = "^1.7"
pre-commit                    = "^3.3"
pydocstyle                    = ">=6"
pytest                        = "^7"
pytest-cov                    = "^4"

[tool.poetry.group.docs.dependencies]
sphinx                        = "^7"
sphinx-autoapi                = "^2"
sphinx-copybutton             = ">=0.5"
furo                          = "=2023.5.20"


[tool.poetry.extras]
all = [
    "pint", "loguru", "psutil", "typer",
    "zstandard", "snappy", "brotli", "lz4"
]


###################
# pytest
###################
#[tool.pytest]  # in a future version of pytest
[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(name)s: %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
# :tyranno: source = addopts = "--cov ${.name} --cov-report term-missing"
addopts = "--cov tyrannosaurus --cov-report term-missing"


###################
# coverage
###################

[tool.coverage.run]
source = "tyrannosaurus"  # tyranno:<: source = "${.name}"

[tool.coverage.html]
directory = ".coverage_report"

[tool.coverage.paths]
source = ["tyrannosaurus"]  # tyranno:<: source = ["${.name}"]

[tool.coverage.report]
show_missing = true


###################
# commitizen
###################
[tool.commitizen]
annotated_tag = true


###################
# flake8
###################
[tool.flake8]
statistics = true
format = "wemake"
min-name-length = 1  # was 2; forbids names like 'x'
max-local-variables = 8  # was 5
max-expressions = 12  # was 9
max-methods = 12  # was 7
max-imports = 16  # was 12
max-asserts = 10  # was 5
max-raises = 5  # was 3
max-call-level = 5  # was 3
max-import-from-members = 10  # was 8
# :tyranno: max-line-length = ${.line-length}
max-line-length = 100
# :tyranno: max-doc-length = ${.line-length}
max-doc-length = 100
extend-ignore = [
    "D107",  # Missing docstring in __init__ (put in class docstring)
    "D212",  # Multi-line docstring start (contradictory)
    "E203",  # Colons with space before (sometimes useful expand)
    "E225",  # Missing whitespace around operator (sometimes useful to condense)
    "E501",  # Line > 79 chars (we use black)
    "S101",  # Assertion (totally not a problem; needed in tests, too)
]
per-file-ignores = ["tests: S101"]
doctests = true
exclude =  [".git", "__pycache__/", "build/", "dist/"]
import-order-style = "google"
docstring-convention = "google"


###################
# Black
###################
[tool.black]
line-length = 100
# target-version is not needed; Black figures it out


###################
# isort
###################
[tool.isort]
profile = "black"
# :tyranno: line_length = ${.line-length}
line_length = 100
